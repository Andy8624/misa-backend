// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator erd {
  provider              = "prisma-erd-generator"
  output                = "ERD.svg" // có đuôi .svg hoặc .png hoặc .pdf
  disableRelationLines  = true
  includeRelationFields = false
}

// Bảng lưu thông tin của Kế toán (Accountant)
model Accountant {
  id          String   @id @default(uuid())
  email       String   @unique
  fullName    String   @map("full_name") // Họ và tên
  phoneNumber String   @map("phone_number") // Số điện thoại 
  birthDate   DateTime @map("birth_date") // Ngày sinh
  gender      String // Giới tính
  password    String // Mật khẩu

  avatarUrl String @default("default-avatar.jpg") @map("avatar_url")
  address   String @default("Not provided")
  zipCode   String @default("00000") @map("zip_code")

  // Auditing
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")
  deletedAt DateTime? @map("deleted_at")

  // Khóa ngoại
  customers Customer[] // Một kế toán có nhiều công ty

  @@map("accountants")
}

// Bảng chứa thông tin các công ty (Customer) mà kế toán (Accountant) đang hợp tác làm việc
model Customer {
  id             String   @id @default(uuid())
  logoUrl        String?  @map("logo_url") // Url ảnh logo
  businessType   String   @map("business_type") // Loại hình doanh nghiệp (Doanh nghiệp/ Hộ kinh doanh)
  taxCode        String   @map("tax_code") // Mã số thuế
  customerName   String   @map("customer_name") // Tên khách hàng
  customerGroup  String?  @map("customer_group") // Nhóm khách hàng
  foundedDate    DateTime @map("founded_date") // Ngày thành lập
  vatTaxType     String   @map("vat_tax_type") // Kê khai thuế GTGT (tháng/quý)
  customerStatus String   @map("customer_status") // Trạng thái khách hàng

  // Thông tin địa chỉ
  province      String // Tỉnh/Thành phố
  district      String // Quận/Huyện
  ward          String? // Phường/Xã
  streetAddress String  @map("street_address") // Số nhà, tên đường, phố
  fullAddress   String  @map("full_address") // Địa chỉ đầy đủ

  contactName        String @map("contact_name")
  contactPhoneNumber String @map("contact_phone_number") // Số điện thoại 
  contactEmail       String @map("contact_email")
  contactPosition    String @map("contact_position") // Chức danh

  // Auditing
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")
  deletedAt DateTime? @map("deleted_at")

  // Quan hệ với accountant
  accountant   Accountant @relation(fields: [accountantId], references: [id])
  accountantId String     @map("accountant_id")

  // Mang danh sách đối tượng khác
  partners            Partner[] // Một công ty có nhiều đối tác (KHÁCH HÀNG - NHÀ CUNG CẤP)
  employees           Employee[] // Một công ty có nhiều nhân viên
  units               Unit[] // Một công ty có nhiều đơn vị tính
  vatTax              VatTax[] // Một công ty có nhiều mức thuế
  goodAndServiceGroup GoodsAndServicesGroup[] // Một công ty có nhiều nhóm hàng hóa dịch vụ
  goodsAndServices    GoodsAndServices[] // Một công ty có nhiều loại hàng hóa dịch vụ
  chartOfAccount      ChartOfAccount[] // Một công ty có nhiều tài khoản
  warrantyPeriod      WarrantyPeriod[] // Một công ty có thể có nhiều mức bảo hành
  Warehouse           Warehouse[] // Một công ty có nhiều kho
  InventoryIn         InventoryIn[] // Một công ty có nhiều phiếu nhập
  InventoryOut        InventoryOut[] // Một công ty có nhiều phiếu xuất

  VoucherAccountEntry     VoucherAccountEntry[]
  GroupOfPurchasedGood    GroupOfPurchasedGood[]
  PurchaseVoucher         PurchaseVoucher[]
  SaleVoucher             SaleVoucher[]
  ProvisionServiceVoucher ProvisionServiceVoucher[]
  ServicePurchaseVoucher  ServicePurchaseVoucher[]
  PaymentTerms            PaymentTerms[]
  Invoice                 Invoice[]
  DepositPayment          DepositPayment[]
  DepositReceip           DepositReceip[]
  CashPayment             CashPayment[]
  CashReceip              CashReceip[]
  BankAccount             BankAccount[]
  File                    File[]

  @@map("customers")
}

// Bảng lưu thông tin các đối tác (Partners) 
// của từng công ty (Customer) mà kế toán (Accountant) đang làm
// Partners có thể là KHÁCH HÀNG hoặc NHÀ CUNG CẤP
model Partner {
  id          String  @id @default(uuid())
  partnerCode String  @map("partner_code") // Mã khách hàng
  partnerType String  @map("partner_type") // Loại đối tác (CLIENT', 'SUPPLIER')
  legalType   String  @map("legal_type") // Loại pháp lý (Cá nhân - tổ chức)
  taxCode     String  @map("tax_code") // Mã số thuế
  govUnitCode String? @map("gov_unit_code") // Mã số đơn vị có quan hệ với Ngân sách

  fullName    String  @map("full_name") // Tên 
  address     String // Địa chỉ 
  phoneNumber String  @map("phone_number") // Số điện thoại 
  websiteUrl  String? @map("website_url") // Đường dẫn đến website của đối tác (Partners)

  // Auditing
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")
  deletedAt DateTime? @map("deleted_at")

  // Khóa ngoại
  // Quan hệ với customer
  customer   Customer @relation(fields: [customerId], references: [id])
  customerId String   @map("customer_id")

  // Bao gồm các tài khoản của đối tượng này
  bankAccounts BankAccount[] // Một đối tác có nhiều tài khoản ngân hàng

  // Relations với InventoryIn
  asClient InventoryIn[] @relation("InventoryInClient")
  asObject InventoryIn[] @relation("InventoryInObject")

  // Relations với InventoryOut
  asClientOut InventoryOut[] @relation("InventoryOutClient")
  asObjectOut InventoryOut[] @relation("InventoryOutObject")

  CashReceipCustomer CashReceip[] @relation("CashReceipCustomer")
  CashReceipSubject  CashReceip[] @relation("CashReceipSubject")

  CashPaymentSubject  CashPayment[] @relation("CashPaymentSubject")
  CashPaymentCustomer CashPayment[] @relation("CashPaymentCustomer")

  CashReceipVoucherItem  CashReceipVoucherItem[]  @relation("CashReceipVoucherItemSubject")
  CashPaymentVoucherItem CashPaymentVoucherItem[] @relation("CashPaymentVoucherItemSubject")

  DepositReceipCustomer  DepositReceip[]  @relation("DepositReceipCustomer")
  DepositReceipSubject   DepositReceip[]  @relation("DepositReceipSubject")
  DepositPaymentSupplier DepositPayment[] @relation("DepositPaymentSupplier")
  DepositPaymentSubject  DepositPayment[] @relation("DepositPaymentSubject")

  DepositReceipItemSubject DepositReceipItem[]  @relation("DepositReceipItemSubject")
  DepositPaymentItem       DepositPaymentItem[] @relation("DepositPaymentItemSubject")

  VoucherAccountEntrySubject  VoucherAccountEntry[] @relation("VoucherAccountEntrySubject")
  VoucherAccountEntrySupplier VoucherAccountEntry[] @relation("VoucherAccountEntrySupplier")

  ServicePurchaseVoucher_Supplier ServicePurchaseVoucher[] @relation("ServicePurchaseVoucher_Supplier")

  ServicePurchaseVoucherItem_Subjet           ServicePurchaseVoucherItem[] @relation("ServicePurchaseVoucherItem_Subjet")
  ServicePurchaseVoucherItem_Supplier         ServicePurchaseVoucherItem[] @relation("ServicePurchaseVoucherItem_Supplier")
  ProvisionServiceVoucher_CashReceiptCustomer ProvisionServiceVoucher[]    @relation("ProvisionServiceVoucher_CashReceiptCustomer")

  ProvisionServiceVoucher_CashReceiptVoucherCustomer ProvisionServiceVoucher[] @relation("ProvisionServiceVoucher_CashReceiptVoucherCustomer")
  ProvisionServiceVoucher_DebtVoucherCustomer        ProvisionServiceVoucher[] @relation("ProvisionServiceVoucher_DebtVoucherCustomer")
  ProvisionServiceVoucher_InvoiceCustomer            ProvisionServiceVoucher[] @relation("ProvisionServiceVoucher_InvoiceCustomer")

  ProvisionServiceVoucher_Customer        ProvisionServiceVoucher[] @relation("ProvisionServiceVoucher_Customer")
  SaleVoucher_InvoiceCustomer             SaleVoucher[]             @relation("SaleVoucher_InvoiceCustomer")
  SaleVoucher_InventoryOutVoucherCustomer SaleVoucher[]             @relation("SaleVoucher_InventoryOutVoucherCustomer")
  SaleVoucher_DebtVoucherCustomer         SaleVoucher[]             @relation("SaleVoucher_DebtVoucherCustomer")
  SaleVoucher_DebtVoucherPrincipal        SaleVoucher[]             @relation("SaleVoucher_DebtVoucherPrincipal")
  SaleVoucher_DebtVoucherTrustor          SaleVoucher[]             @relation("SaleVoucher_DebtVoucherTrustor")
  SaleVoucher_CashReceiptCustomer         SaleVoucher[]             @relation("SaleVoucher_CashReceiptCustomer")
  SaleVoucher_CashReceiptPrincipal        SaleVoucher[]             @relation("SaleVoucher_CashReceiptPrincipal")
  SaleVoucher_CashReceiptVoucherCustomer  SaleVoucher[]             @relation("SaleVoucher_CashReceiptVoucherCustomer")
  SaleVoucher_CashReceiptVoucherPrincipal SaleVoucher[]             @relation("SaleVoucher_CashReceiptVoucherPrincipal")
  SaleVoucher_Customer                    SaleVoucher[]             @relation("SaleVoucher_Customer")
  PurchaseVoucher_Supplier                PurchaseVoucher[]         @relation("PurchaseVoucher_Supplier")

  @@map("partners")
}

model Bank {
  id                 String  @id @default(uuid())
  fullName           String? @map("full_name") // Tên tiếng việt
  shortName          String? @map("short_name") // Tên viết tắt
  englishName        String? @map("english_name") // Tên tiếng anh
  headquarterAddress String? @map("headquarter_address") // Địa chỉ trụ sở chính
  description        String? // Mô tả
  logoUrl            String? @map("logo_url") // Địa chỉ logo ngân hàng

  // Auditing
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")
  deletedAt DateTime? @map("deleted_at")

  // Bao gồm danh sách các tài khoản thuộc ngân hàng này
  bankAccounts BankAccount[]

  CashReceipVoucherItem  CashReceipVoucherItem[]  @relation("CashReceipVoucherItem_Bank")
  CashPaymentVoucherItem CashPaymentVoucherItem[] @relation("CashPaymentVoucherItem_Bank")

  ServicePurchaseVoucher_RecipientAccount        ServicePurchaseVoucher[]  @relation("ServicePurchaseVoucher_RecipientAccount")
  ServicePurchaseVoucher_PaymentAccount          ServicePurchaseVoucher[]  @relation("ServicePurchaseVoucher_PaymentAccount")
  ProvisionServiceVoucher_CashReceiptBankAccount ProvisionServiceVoucher[] @relation("ProvisionServiceVoucher_CashReceiptBankAccount")
  SaleVoucher_CashReceiptCashInBankReceipt       SaleVoucher[]             @relation("SaleVoucher_CashReceiptCashInBankReceipt")

  @@map("banks")
}

model BankAccount {
  id                   String  @id @default(uuid())
  accountNumber        String? @map("account_number") // Số tài khoản
  provinceOrCity       String? @map("province_or_city") // Tỉnh thành phố
  branchName           String? @map("branch_name") // Tên chi nhánh
  branchAddress        String? @map("branch_address") // Địa chỉ chi nhánh
  deltailBranchAddress String? @map("detail_branch_address") // Địa chỉ chi tiết chi nhánh

  // Khóa ngoại
  // Quan hệ với đối tác
  Partner   Partner? @relation(fields: [partnerId], references: [id])
  partnerId String?  @map("partner_id")

  // Quan hệ với nhân viên
  Employee   Employee? @relation(fields: [employeeId], references: [id])
  employeeId String?   @map("employee_id")

  // Quan hệ với ngân hàng
  Bank   Bank?   @relation(fields: [bankId], references: [id])
  bankId String? @map("bank_id")

  // Quan hệ với bảng công ty
  customer   Customer @relation(fields: [customerId], references: [id])
  customerId String   @map("customer_id")

  DepositReceipBank  DepositReceip[]  @relation("DepositReceipBank")
  DepositPaymentBank DepositPayment[] @relation("DepositPaymentBank")

  // Auditing
  createdAt                        DateTime          @default(now()) @map("created_at")
  updatedAt                        DateTime?         @updatedAt @map("updated_at")
  deletedAt                        DateTime?         @map("deleted_at")
  SaleVoucher_InvoiceBankAccount   SaleVoucher[]     @relation("SaleVoucher_InvoiceBankAccount")
  PurchaseVoucher_RecipientAccount PurchaseVoucher[] @relation("PurchaseVoucher_RecipientAccount")
  PurchaseVoucher_PaymentAccount   PurchaseVoucher[] @relation("PurchaseVoucher_PaymentAccount")

  @@map("bank_accounts")
}

model Employee {
  id           String @id @default(uuid())
  employeeCode String @map("employee_code") // Mã nhân viên (NV0001)

  // Thông tin cá nhân
  fullName           String   @map("full_name")
  dob                DateTime // Ngày sinh
  sex                String // Giới tính Male - Female - Other
  address            String // Địa chỉ
  position           String // Chức danh
  passportNumber     String?  @map("passport_number") // Số hộ chiếu
  phoneNumber        String   @map("phone_number") // Số điện thoại
  idCardNumber       String   @map("id_card_number") // Số CCCD
  idCardIssuedDate   String   @map("id_card_issued_date") // Ngày cấp CCCD
  idCardPlaceOfIssue String   @map("id_card_place_of_issue") // Nơi cấp CCCD

  // Auditing
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")
  deletedAt DateTime? @map("deleted_at")

  // Khóa ngoại
  // Quan hệ với customer
  customer   Customer @relation(fields: [customerId], references: [id])
  customerId String   @map("customer_id")

  // Mang danh sách đối tượng khác
  bankAccounts BankAccount[] // Một nhân viên có nhiều tài khoản ngân hàng

  InventoryIns InventoryIn[] // Một nhân viên có thể tạo nhiều phiếu nhập kho
  InventoryOut InventoryOut[] // Một nhân viên có thể tạo nhiều phiếu xuất kho

  // CashReceipEmployeeByType CashReceip[] @relation("CashReceipEmployeeByType")
  CashReceipEmployee CashReceip[] @relation("CashReceipEmployee")

  CashPaymentEmployee CashPayment[] @relation("CashPaymentEmployee")
  // CashPaymentEmployeeByType CashPayment[] @relation("CashPaymentEmployeeByType")

  DebtCollectorEmployee DepositReceip[] @relation("DebtCollectorEmployee")
  DepositReceipEmployee DepositReceip[] @relation("DepositReceipEmployee")

  DepositPaymentEmployee DepositPayment[] @relation("DepositPaymentEmployee")
  // DepositPayment         DepositPayment[] @relation("DepositPaymentEmployeeByType")

  Invoice_ExecutinPerson Invoice[] @relation("Invoice_ExecutinPerson")

  ServicePurchaseVoucher_PurchasingStaff                ServicePurchaseVoucher[]  @relation("ServicePurchaseVoucher_PurchasingStaff")
  ProvisionServiceVoucher_CashReceiptStoreperson        ProvisionServiceVoucher[] @relation("ProvisionServiceVoucher_CashReceiptStoreperson")
  ProvisionServiceVoucher_DebtVoucherStoreperson        ProvisionServiceVoucher[] @relation("ProvisionServiceVoucher_DebtVoucherStoreperson")
  ProvisionServiceVoucher_CashReceiptVoucherStoreperson ProvisionServiceVoucher[] @relation("ProvisionServiceVoucher_CashReceiptVoucherStoreperson")
  SaleVoucher_InventoryOutVoucherStorePerson            SaleVoucher[]             @relation("SaleVoucher_InventoryOutVoucherStorePerson")
  SaleVoucher_DebtVoucherStoreperson                    SaleVoucher[]             @relation("SaleVoucher_DebtVoucherStoreperson")
  SaleVoucher_CashReceiptStoreperson                    SaleVoucher[]             @relation("SaleVoucher_CashReceiptStoreperson")
  SaleVoucher_CashReceiptVoucherStoreperson             SaleVoucher[]             @relation("SaleVoucher_CashReceiptVoucherStoreperson")
  PurchaseVoucher_PurchasingStaff                       PurchaseVoucher[]         @relation("PurchaseVoucher_PurchasingStaff")
  AssetTransfer_ReceivedBy                              AssetTransfer[]           @relation("AssetTransfer_ReceivedBy")
  AssetTransfer_DeliveredBy                             AssetTransfer[]           @relation("AssetTransfer_DeliveredBy")

  @@map("employees")
}

model WarrantyPeriod {
  id          String @id @default(uuid())
  description String // Mô tả

  // Auditing
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")
  deletedAt DateTime? @map("deleted_at")

  // Chứa danh sách các bảng khác
  goodsAndServices GoodsAndServices[] // Một loại bảo hành thuộc nhiều dịch vụ hàng hóa

  // Quan hệ với bảng công ty
  customer   Customer @relation(fields: [customerId], references: [id])
  customerId String   @map("customer_id")

  @@map("warranty_periods")
}

model GoodsAndServices {
  id                   String  @id @default(uuid())
  name                 String
  code                 String
  vatDecrease          String  @map("vat_decrease")
  minimumStockQuantity Int     @map("minimum_stock_quantity")
  image                String?
  source               String?
  description          String?
  purchaseDescription  String? @map("purchase_description")
  saleDescription      String? @map("sale_description")
  latestPurchasePrice  Int     @map("latest_purchase_price")

  // Auditing
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")
  deletedAt DateTime? @map("deleted_at")

  // Quan hệ với Unit
  Unit   Unit?   @relation(fields: [unitId], references: [id])
  unitId String? @map("unit_id")

  // Quan hệ với WarrantyPeriod
  WarrantyPeriod   WarrantyPeriod? @relation(fields: [warrantyPeriodId], references: [id])
  warrantyPeriodId String?         @map("warranty_period_id")

  // Quan hệ với VatTax
  VatTax   VatTax? @relation(fields: [vatTaxId], references: [id])
  vatTaxId String? @map("vat_tax_id")

  // Quan hệ với ChartOfAccount (nhiều foreign keys)
  WarehouseAccount   ChartOfAccount? @relation("WarehouseAccount", fields: [warehouseAccountId], references: [id])
  warehouseAccountId String?         @map("warehouse_account_id")

  ReturnAccount   ChartOfAccount? @relation("ReturnAccount", fields: [returnAccountId], references: [id])
  returnAccountId String?         @map("return_account_id")

  RevenueAccount   ChartOfAccount? @relation("RevenueAccount", fields: [revenueAccountId], references: [id])
  revenueAccountId String?         @map("revenue_account_id")

  ExpenseAccount   ChartOfAccount? @relation("ExpenseAccount", fields: [expenseAccountId], references: [id])
  expenseAccountId String?         @map("expense_account_id")

  SalesAllowanceAccount   ChartOfAccount? @relation("SalesAllowanceAccount", fields: [salesAllowanceAccountId], references: [id])
  salesAllowanceAccountId String?         @map("sales_allowance_account_id")

  DiscountAccount   ChartOfAccount? @relation("DiscountAccount", fields: [discountAccountId], references: [id])
  discountAccountId String?         @map("discount_account_id")

  // Quan hệ với công ty
  customer   Customer @relation(fields: [customerId], references: [id])
  customerId String   @map("customer_id")

  // Mang danh sách đối tượng khác
  GoodsAndServicesGroupMapping GoodsAndServicesGroupMapping[]
  InventoryOutItems            InventoryOutItem[]
  inventoryInItems             InventoryInItem[]

  VoucherAccountEntry               VoucherAccountEntry[]         @relation("VoucherAccountEntry_GoodsAndServices")
  ServicePurchaseVoucherItem_ItemId ServicePurchaseVoucherItem[]  @relation("ServicePurchaseVoucherItem_ItemId")
  ProvisionServiceVoucherItem_Item  ProvisionServiceVoucherItem[] @relation("ProvisionServiceVoucherItem_Item")
  SaleVoucherItem_Item              SaleVoucherItem[]             @relation("SaleVoucherItem_Item")
  PurchaseVoucherItem_Item          PurchaseVoucherItem[]         @relation("PurchaseVoucherItem_Item")

  @@map("goods_and_services")
}

model GoodsAndServicesGroup {
  id     String @id @default(uuid())
  code   String
  name   String
  status String

  // Mang danh sách đối tượng khác
  GoodsAndServicesGroupMapping GoodsAndServicesGroupMapping[]

  // Self-referential relationship
  parentGroup   GoodsAndServicesGroup? @relation("ParentGroup", fields: [parentGroupId], references: [id])
  parentGroupId String?                @map("parent_group_id")

  // Quan hệ ngược - các nhóm con
  childGroups GoodsAndServicesGroup[] @relation("ParentGroup")

  // QUan hệ với công ty
  customer   Customer @relation(fields: [customerId], references: [id])
  customerId String   @map("customer_id")

  // Auditing
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")
  deletedAt DateTime? @map("deleted_at")

  @@map("goods_and_services_groups")
}

model GoodsAndServicesGroupMapping {
  id String @id @default(uuid())

  // Quan hệ với GoodsAndServices
  goodsAndServices   GoodsAndServices @relation(fields: [goodsAndServicesId], references: [id], onDelete: Cascade)
  goodsAndServicesId String           @map("goods_and_services_id")

  // Quan hệ với GoodsAndServicesGroup
  goodsAndServicesGroup   GoodsAndServicesGroup @relation(fields: [goodsAndServicesGroupId], references: [id], onDelete: Cascade)
  goodsAndServicesGroupId String                @map("goods_and_services_group_id")

  // Auditing
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")

  // Đảm bảo không có duplicate mapping
  @@unique([goodsAndServicesId, goodsAndServicesGroupId])
  @@map("goods_and_services_group_mappings")
}

model Unit {
  id          String  @id @default(uuid())
  name        String
  status      String
  description String?

  // Auditing
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")
  deletedAt DateTime? @map("deleted_at")

  // Mang danh sách đối tượng khác
  goodsAndServices GoodsAndServices[]

  // Quan hệ với Customer (Công ty)
  customer   Customer @relation(fields: [customerId], references: [id])
  customerId String   @map("customer_id")

  InventoryOutItem                 InventoryOutItem[]
  InventoryInItem                  InventoryInItem[]
  VoucherAccountEntryUnit          VoucherAccountEntry[]         @relation("VoucherAccountEntryUnit")
  ServicePurchaseVoucherItem_Unit  ServicePurchaseVoucherItem[]  @relation("ServicePurchaseVoucherItem_Unit")
  ProvisionServiceVoucherItem_Unit ProvisionServiceVoucherItem[] @relation("ProvisionServiceVoucherItem_Unit")
  SaleVoucherItem                  SaleVoucherItem[]             @relation("SaleVoucherItem_Unit")
  PurchaseVoucherItem_Unit         PurchaseVoucherItem[]         @relation("PurchaseVoucherItem_Unit")

  @@map("units")
}

model VatTax {
  id      String @id @default(uuid())
  name    String
  percent Int

  // Auditing
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")
  deletedAt DateTime? @map("deleted_at")

  // Mang danh sách đối tượng khác
  goodsAndServices GoodsAndServices[]

  // Quan hệ với bảng công ty 
  customer   Customer @relation(fields: [customerId], references: [id])
  customerId String   @map("customer_id")

  ServicePurchaseVoucherItem_Vat  ServicePurchaseVoucherItem[]  @relation("ServicePurchaseVoucherItem_Vat")
  ProvisionServiceVoucherItem_Vat ProvisionServiceVoucherItem[] @relation("ProvisionServiceVoucherItem_Vat")
  SaleVoucherItem_Vat             SaleVoucherItem[]             @relation("SaleVoucherItem_Vat")
  PurchaseVoucherItem_Vat         PurchaseVoucherItem[]         @relation("PurchaseVoucherItem_Vat")

  @@map("vat_taxes")
}

model ChartOfAccount {
  id              String  @id @default(uuid())
  accountNumber   String? @map("account_number")
  accountName     String? @map("account_name")
  englishName     String? @map("english_name")
  particular      String?
  characteristics String?

  // Auditing
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")
  deletedAt DateTime? @map("deleted_at")

  // Self-referencing relation
  primaryAccount   ChartOfAccount? @relation("ChartOfAccountPrimary", fields: [primaryAccountId], references: [id])
  primaryAccountId String?         @map("primary_account_id")

  // Quan hệ ngược với GoodsAndServices (1 ChartOfAccount có thể được sử dụng bởi nhiều GoodsAndServices)
  warehouseGoods      GoodsAndServices[] @relation("WarehouseAccount")
  returnGoods         GoodsAndServices[] @relation("ReturnAccount")
  revenueGoods        GoodsAndServices[] @relation("RevenueAccount")
  expenseGoods        GoodsAndServices[] @relation("ExpenseAccount")
  salesAllowanceGoods GoodsAndServices[] @relation("SalesAllowanceAccount")
  discountGoods       GoodsAndServices[] @relation("DiscountAccount")

  // Relation ngược lại - danh sách các tài khoản con
  subAccounts ChartOfAccount[] @relation("ChartOfAccountPrimary")

  // Chứa danh sách kho
  warehouses Warehouse[] // Một tài khoản có nhiều kho

  // Quan hệ với bảng công ty
  customer   Customer @relation(fields: [customerId], references: [id])
  customerId String   @map("customer_id")

  creditInventoryOutItems                          InventoryOutItem[]            @relation("InventoryOutItemCredit")
  debitInventoryOutItems                           InventoryOutItem[]            @relation("InventoryOutItemDebit")
  creditInventoryInItems                           InventoryInItem[]             @relation("InventoryInItemCredit")
  debitInventoryInItems                            InventoryInItem[]             @relation("InventoryInItemDebit")
  creditCashReceipVoucherItem                      CashReceipVoucherItem[]       @relation("CashReceipVoucherItem_CreditAccount")
  debitCashReceipVoucherItem                       CashReceipVoucherItem[]       @relation("CashReceipVoucherItem_DebitAccount")
  creditCashPaymentVoucherItem                     CashPaymentVoucherItem[]      @relation("CashPaymentVoucherItem_CreditAccount")
  debitCashPaymentVoucherItem                      CashPaymentVoucherItem[]      @relation("CashPaymentVoucherItem_DebitAccount")
  DepositReceipItemCredit                          DepositReceipItem[]           @relation("DepositReceipItemCredit")
  DepositReceipItemDebit                           DepositReceipItem[]           @relation("DepositReceipItemDebit")
  DepositPaymentItemCredit                         DepositPaymentItem[]          @relation("DepositPaymentItemCredit")
  DepositPaymentItemDebit                          DepositPaymentItem[]          @relation("DepositPaymentItemDebit")
  VoucherAccountEntryCredit                        VoucherAccountEntry[]         @relation("VoucherAccountEntryCredit")
  VoucherAccountEntryDebit                         VoucherAccountEntry[]         @relation("VoucherAccountEntryDebit")
  VoucherAccountEntry                              VoucherAccountEntry[]         @relation("VoucherAccountEntryVatAccount")
  ServicePurchaseVoucherItem_VatAccount            ServicePurchaseVoucherItem[]  @relation("ServicePurchaseVoucherItem_VatAccount")
  ServicePurchaseVoucherItemCredit                 ServicePurchaseVoucherItem[]  @relation("ServicePurchaseVoucherItemCredit")
  ServicePurchaseVoucherItemDebit                  ServicePurchaseVoucherItem[]  @relation("ServicePurchaseVoucherItemDebit")
  ProvisionServiceVoucherItemCredit                ProvisionServiceVoucherItem[] @relation("ProvisionServiceVoucherItemCredit")
  ProvisionServiceVoucherItemDebit                 ProvisionServiceVoucherItem[] @relation("ProvisionServiceVoucherItemDebit")
  ProvisionServiceVoucherItemDiscount              ProvisionServiceVoucherItem[] @relation("ProvisionServiceVoucherItemDiscount")
  ProvisionServiceVoucherItemVat                   ProvisionServiceVoucherItem[] @relation("ProvisionServiceVoucherItemVat")
  SaleVoucherItem_ExpenseAccount                   SaleVoucherItem[]             @relation("SaleVoucherItem_ExpenseAccount")
  SaleVoucherItem_InventoryAccount                 SaleVoucherItem[]             @relation("SaleVoucherItem_InventoryAccount")
  SaleVoucherItemDebit                             SaleVoucherItem[]             @relation("SaleVoucherItemDebit")
  SaleVoucherItemCredit                            SaleVoucherItem[]             @relation("SaleVoucherItemCredit")
  SaleVoucherItemCash                              SaleVoucherItem[]             @relation("SaleVoucherItemCash")
  SaleVoucherItemLiability                         SaleVoucherItem[]             @relation("SaleVoucherItemLiability")
  SaleVoucherItem_LiabilityAccountOrExpense        SaleVoucherItem[]             @relation("SaleVoucherItem_LiabilityAccountOrExpense")
  SaleVoucherItem_SaleAccount                      SaleVoucherItem[]             @relation("SaleVoucherItem_SaleAccount")
  SaleVoucherItem_ExportTaxAccount                 SaleVoucherItem[]             @relation("SaleVoucherItem_ExportTaxAccount")
  PurchaseVoucherItem_CostAccount                  PurchaseVoucherItem[]         @relation("PurchaseVoucherItem_CostAccount")
  PurchaseVoucherItem_AccountPayable               PurchaseVoucherItem[]         @relation("PurchaseVoucherItem_AccountPayable")
  PurchaseVoucherItem_CashAccount                  PurchaseVoucherItem[]         @relation("PurchaseVoucherItem_CashAccount")
  PurchaseVoucherItem_InventoryAccount             PurchaseVoucherItem[]         @relation("PurchaseVoucherItem_InventoryAccount")
  PurchaseVoucherItem_VatAccount                   PurchaseVoucherItem[]         @relation("PurchaseVoucherItem_VatAccount")
  PurchaseVoucherItem_ImportTaxAccount             PurchaseVoucherItem[]         @relation("PurchaseVoucherItem_ImportTaxAccount")
  PurchaseVoucherItem_SpecialConsumptionTaxAccount PurchaseVoucherItem[]         @relation("PurchaseVoucherItem_SpecialConsumptionTaxAccount")
  PurchaseVoucherItem_VatCorrespondingAccount      PurchaseVoucherItem[]         @relation("PurchaseVoucherItem_VatCorrespondingAccount")
  AssetWriteOffAsset_OriginalCostAccount           AssetWriteOffAsset[]          @relation("AssetWriteOffAsset_OriginalCostAccount")
  AssetWriteOffAsset_DepreciationAccount           AssetWriteOffAsset[]          @relation("AssetWriteOffAsset_DepreciationAccount")
  AssetWriteOffAsset_RemainingValueAccount         AssetWriteOffAsset[]          @relation("AssetWriteOffAsset_RemainingValueAccount")
  AssetWriteOffAccounting_DebitAccount             AssetWriteOffAccounting[]     @relation("AssetWriteOffAccounting_DebitAccount")
  AssetWriteOffAccounting_CreditAccount            AssetWriteOffAccounting[]     @relation("AssetWriteOffAccounting_CreditAccount")
  AssetDepreciationInfo_OriginalCostAccount        AssetDepreciationInfo[]       @relation("AssetDepreciationInfo_OriginalCostAccount")
  AssetDepreciationInfo_depreciationAccount        AssetDepreciationInfo[]       @relation("AssetDepreciationInfo_DepreciationAccount")
  AssetAllocation_ExpenseAccount                   AssetAllocation[]             @relation("AssetAllocation_ExpenseAccount")
  AssetFormationOrigin_DebitAccount                AssetFormationOrigin[]        @relation("AssetFormationOrigin_DebitAccount")
  AssetFormationOrigin_CreditAccount               AssetFormationOrigin[]        @relation("AssetFormationOrigin_CreditAccount")
  AssetTransferDetail_ExpenseAccount               AssetTransferDetail[]         @relation("AssetTransferDetail_ExpenseAccount")
  AssetRevaluationPosting_DebitAccount             AssetRevaluationPosting[]     @relation("AssetRevaluationPosting_DebitAccount")
  AssetRevaluationPosting_CreditAccount            AssetRevaluationPosting[]     @relation("AssetRevaluationPosting_CreditAccount")

  @@map("chart_of_accounts")
}

model Warehouse {
  id      String @id @default(uuid())
  code    String // Mã kho
  name    String // Tên kho
  status  String // Trạng thái kho
  address String // Địa chỉ kho

  // Auditing
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")
  deletedAt DateTime? @map("deleted_at")

  // Quan hệ với bảng công ty
  customer   Customer @relation(fields: [customerId], references: [id])
  customerId String   @map("customer_id")

  // Quan hệ với bảng tài khoản
  ChartOfAccount   ChartOfAccount? @relation(fields: [chartOfAccountId], references: [id])
  chartOfAccountId String?         @map("chart_of_account_id")

  InventoryOutItem InventoryOutItem[]
  InventoryInItem  InventoryInItem[]

  SaleVoucherItem               SaleVoucherItem[]     @relation("SaleVoucherItem_Warehouse")
  PurchaseVoucherItem_Warehouse PurchaseVoucherItem[] @relation("PurchaseVoucherItem_Warehouse")

  @@map("warehouses")
}

model InventoryIn {
  id                      String    @id @default(uuid())
  inventoryInVoucherType  String?   @map("inventory_in_voucher_type")
  address                 String?
  courier                 String? // Chuyển phát nhanh (Người giao hàng)
  description             String?
  withOriginalVoucher     String?   @map("with_original_vouher")
  postedDate              DateTime? @map("posted_date")
  voucherDate             DateTime? @map("voucher_date")
  voucherNumber           String?   @map("voucher_number")
  costOfInventoryReturned String?   @map("cost_of_inventory_returned")

  // Auditing
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")
  deletedAt DateTime? @map("deleted_at")

  // Quan hệ với bảng nhân viên (Nhân viên bán hàng của loại hàng bị trả lại, và cần nhập vào kho)
  storePerson   Employee? @relation(fields: [storePersonId], references: [id])
  storePersonId String?   @map("store_person_id")

  // Relations với Partner
  client   Partner? @relation("InventoryInClient", fields: [clientId], references: [id])
  clientId String?  @map("client_id")

  object   Partner? @relation("InventoryInObject", fields: [objectId], references: [id])
  objectId String?  @map("object_id")

  // Quan hệ với bảng công ty
  company   Customer @relation(fields: [companyId], references: [id])
  companyId String   @map("customer_id")

  InventoryInItem InventoryInItem[]

  @@map("inventory_ins")
}

model InventoryInItem {
  id        String  @id @default(uuid())
  itemName  String? @map("item_name")
  quantity  Int?
  unitPrice Int?    @map("unit_price")

  // ✅ Thêm relations với ChartOfAccount
  creditAccount   ChartOfAccount? @relation("InventoryInItemCredit", fields: [creditAccountId], references: [id])
  creditAccountId String?         @map("credit_account_id")

  debitAccount   ChartOfAccount? @relation("InventoryInItemDebit", fields: [debitAccountId], references: [id])
  debitAccountId String?         @map("debit_account_id")

  // ✅ Thêm các relations khác
  warehouse   Warehouse? @relation(fields: [warehouseId], references: [id])
  warehouseId String?    @map("warehouse_id")

  item   GoodsAndServices? @relation(fields: [itemId], references: [id])
  itemId String?           @map("item_id")

  // ✅ Relation với InventoryIn (không phải InventoryOut)
  inventoryIn   InventoryIn? @relation(fields: [inventoryInId], references: [id])
  inventoryInId String?      @map("inventory_in_id")

  unit   Unit?   @relation(fields: [unitId], references: [id])
  unitId String? @map("unit_id")

  // Auditing
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")
  deletedAt DateTime? @map("deleted_at")

  @@map("inventory_in_items")
}

model InventoryOut {
  id                      String    @id @default(uuid())
  inventoryOutVoucherType String?   @map("inventory_out_voucher_type")
  address                 String?
  receipient              String?
  particular              String? // Lý do xuất
  withOriginalVoucher     String?   @map("with_original_vouher")
  component               String?
  postedDate              DateTime? @map("posted_date")
  voucherDate             DateTime? @map("voucher_date")
  voucherNumber           String?   @map("voucher_number")

  // Auditing
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")
  deletedAt DateTime? @map("deleted_at")

  // Quan hệ với bảng nhân viên (Nhân viên bán hàng của loại hàng bị trả lại, và cần nhập vào kho)
  storePerson   Employee? @relation(fields: [storePersonId], references: [id])
  storePersonId String?   @map("store_person_id")

  // Relations với Partner
  client   Partner? @relation("InventoryOutClient", fields: [clientId], references: [id])
  clientId String?  @map("client_id")

  object   Partner? @relation("InventoryOutObject", fields: [objectId], references: [id])
  objectId String?  @map("object_id")

  // Quan hệ với bảng công ty
  company   Customer @relation(fields: [companyId], references: [id])
  companyId String   @map("company_id")

  InventoryOutItem InventoryOutItem[]

  @@map("inventory_outs")
}

model InventoryOutItem {
  id                 String  @id @default(uuid())
  itemName           String? @map("item_name")
  quantity           Int?
  unitPrice          Int?    @map("unit_price")
  finishedGood       String? @map("finished_good")
  costClassification String? @map("cost_classification")
  costObject         String? @map("cost_object")

  creditAccount   ChartOfAccount? @relation("InventoryOutItemCredit", fields: [creditAccountId], references: [id])
  creditAccountId String?         @map("credit_account_id")

  debitAccount   ChartOfAccount? @relation("InventoryOutItemDebit", fields: [debitAccountId], references: [id])
  debitAccountId String?         @map("debit_account_id")

  // Các relations khác giữ nguyên
  warehouse   Warehouse? @relation(fields: [warehouseId], references: [id])
  warehouseId String?    @map("warehouse_id")

  item   GoodsAndServices? @relation(fields: [itemId], references: [id])
  itemId String?           @map("item_id")

  inventoryOut   InventoryOut? @relation(fields: [inventoryOutId], references: [id])
  inventoryOutId String?       @map("inventory_out_id")

  unit   Unit?   @relation(fields: [unitId], references: [id])
  unitId String? @map("unit_id")

  // Lệnh sản xuất (Tìm hiểu sau)
  productionOrders   productionOrders? @relation(fields: [productionOrdersId], references: [id])
  productionOrdersId String?

  // Auditing
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")
  deletedAt DateTime? @map("deleted_at")

  @@map("inventory_out_items")
}

model productionOrders {
  id          String    @id @default(uuid())
  date        DateTime?
  orderNo     Int?      @map("order_no")
  description String?

  // Auditing
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")
  deletedAt DateTime? @map("deleted_at")

  inventoryOutItem InventoryOutItem[]
}

model File {
  id       String @id @default(uuid())
  fileName String @map("file_name")
  fileSize Int    @map("file_size")
  mimeType String @map("mime_type")
  path     String

  // Add these fields for Directus integration
  originalName String? @map("original_name")
  fileUrl      String? @map("file_url")
  directusId   String? @map("directus_id")

  // Relations
  company   Customer @relation(fields: [companyId], references: [id])
  companyId String   @map("company_id")

  // Auditing
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")
  deletedAt DateTime? @map("deleted_at")

  attachments FileAttachment[]

  @@map("files")
}

model FileAttachment {
  id          String @id @default(uuid())
  relatedType String // 'inventory_in', 'invoice', 'deposit_payment',...
  relatedId   String // UUID của phiếu

  file   File   @relation(fields: [fileId], references: [id])
  fileId String
}

// Phiếu thu tiền mặt
model CashReceip {
  id                     String    @id @default(uuid())
  cashReceiptVoucherType String?   @map("cash_receipt_voucher_type") // Loại phiếu thu
  payer                  String? // Người nộp
  address                String?
  postedDate             DateTime? @map("posted_date") // Ngày hạch toán
  voucherDate            DateTime? @map("voucher_date") // Ngày chứng từ
  voucherNumber          String?   @map("voucher_number") // Số chứng từ
  reason                 String? // Lý do nộp
  withOriginalVoucher    String?   @map("with_original_voucher")

  // Quan hệ với bảng công ty
  company   Customer? @relation(fields: [companyId], references: [id])
  companyId String?   @map("company_id")

  // employeeByType  -- employee -- nhân viên
  // EmployeeByType Employee? @relation("CashReceipEmployeeByType", fields: [employeeByType], references: [id])
  // employeeByType String?   @map("employee_by_type")

  // employee -- nhân viên
  Employee Employee? @relation("CashReceipEmployee", fields: [employee], references: [id])
  employee String?

  // subject -- partner -- Đối tượng nào
  Subject Partner? @relation("CashReceipSubject", fields: [subject], references: [id])
  subject String?

  // customer -- partner -- khách hàng
  Customer Partner? @relation("CashReceipCustomer", fields: [customer], references: [id])
  customer String?

  CashReceipVoucherItem CashReceipVoucherItem[] @relation("CashReceipVoucherItem_CashReceip")

  // Auditing
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")
  deletedAt DateTime? @map("deleted_at")
}

// Chi tiết phiếu thu tiền mặt
model CashReceipVoucherItem {
  id          String  @id @default(uuid())
  amount      Float?
  description String?

  CashReceip CashReceip? @relation("CashReceipVoucherItem_CashReceip", fields: [cashReceip], references: [id])
  cashReceip String?

  Subject Partner? @relation("CashReceipVoucherItemSubject", fields: [subject], references: [id])
  subject String?

  DebitAccount ChartOfAccount? @relation("CashReceipVoucherItem_DebitAccount", fields: [debitAccount], references: [id])
  debitAccount String?

  CreditAccount ChartOfAccount? @relation("CashReceipVoucherItem_CreditAccount", fields: [creditAccount], references: [id])
  creditAccount String?

  Bank Bank?   @relation("CashReceipVoucherItem_Bank", fields: [bank], references: [id])
  bank String?

  // Auditing
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")
  deletedAt DateTime? @map("deleted_at")
}

// Phiếu chi tiền mặt
model CashPayment {
  id                     String    @id @default(uuid())
  cashPaymentVoucherType String?   @map("cash_receipt_voucher_type") // Loại phiếu thu
  supplierName           String?   @map("supplier_name") // Tên nhà cung cấp
  address                String?
  recipient              String? // Người nhận
  withOriginalVoucher    String?   @map("with_original_vouher")
  reason                 String? // Lý do nộp
  postedDate             DateTime? @map("posted_date") // Ngày hạch toán
  voucherDate            DateTime? @map("voucher_date") // Ngày chứng từ
  voucherNumber          String?   @map("voucher_number") // Số chứng từ

  // Quan hệ với bảng công ty
  company   Customer? @relation(fields: [companyId], references: [id])
  companyId String?   @map("company_id")

  // employeeByType  -- employee -- nhân viên
  // EmployeeByType Employee? @relation("CashPaymentEmployeeByType", fields: [employeeByType], references: [id])
  // employeeByType String?   @map("employee_by_type")

  // employee -- nhân viên
  Employee Employee? @relation("CashPaymentEmployee", fields: [employee], references: [id])
  employee String?

  // subject -- partner -- Đối tượng nào
  Subject Partner? @relation("CashPaymentSubject", fields: [subject], references: [id])
  subject String?

  // supplier -- partner -- nhà cung cấp
  Supplier Partner? @relation("CashPaymentCustomer", fields: [supplier], references: [id])
  supplier String?

  // Auditing
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")
  deletedAt DateTime? @map("deleted_at")

  CashPaymentVoucherItem CashPaymentVoucherItem[] @relation("CashPaymentVoucherItem_CashPayment")
}

// Chi tiết phiếu chi tiền mặt
model CashPaymentVoucherItem {
  id          String  @id @default(uuid())
  amount      Float?
  description String?

  CashPayment CashPayment? @relation("CashPaymentVoucherItem_CashPayment", fields: [cashPayment], references: [id])
  cashPayment String?

  Subject Partner? @relation("CashPaymentVoucherItemSubject", fields: [subject], references: [id])
  subject String?

  DebitAccount ChartOfAccount? @relation("CashPaymentVoucherItem_DebitAccount", fields: [debitAccount], references: [id])
  debitAccount String?

  CreditAccount ChartOfAccount? @relation("CashPaymentVoucherItem_CreditAccount", fields: [creditAccount], references: [id])
  creditAccount String?

  Bank Bank?   @relation("CashPaymentVoucherItem_Bank", fields: [bank], references: [id])
  bank String?

  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")
  deletedAt DateTime? @map("deleted_at")
}

// Tiền gửi - thu
model DepositReceip {
  id                String    @id @default(uuid())
  depositReceipType String?   @map("deposit_receip_type")
  postedDate        DateTime? @map("posted_date") // Ngày hạch toán
  voucherDate       DateTime? @map("voucher_date") // Ngày chứng từ
  voucherNumber     String?   @map("voucher_number") // Số chứng từ
  address           String?
  reason            String?
  bankName          String?   @map("bank_name")

  // Quan hệ với bảng công ty
  Company   Customer @relation(fields: [companyId], references: [id])
  companyId String   @map("company_id")

  // Nhân viên thu nợ
  DebtCollector Employee? @relation("DebtCollectorEmployee", fields: [debtCollector], references: [id])
  debtCollector String?

  Employee Employee? @relation("DepositReceipEmployee", fields: [employee], references: [id])
  employee String?

  Subject Partner? @relation("DepositReceipSubject", fields: [subject], references: [id])
  subject String?

  // customer -- partner -- khách hàng
  Customer Partner? @relation("DepositReceipCustomer", fields: [customer], references: [id])
  customer String?

  Bank BankAccount? @relation("DepositReceipBank", fields: [bank], references: [id])
  bank String?

  DepositReceipItem DepositReceipItem[] @relation("DepositReceipItem_DepositReceip")

  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")
  deletedAt DateTime? @map("deleted_at")
}

// Chi tiết tiền gửi - thu
model DepositReceipItem {
  id          String  @id @default(uuid())
  description String?
  ammount     Int?

  // loanAgreement 

  DepositReceip DepositReceip? @relation("DepositReceipItem_DepositReceip", fields: [depositReceip], references: [id])
  depositReceip String?

  Subject Partner? @relation("DepositReceipItemSubject", fields: [subject], references: [id])
  subject String?

  creditAccount   ChartOfAccount? @relation("DepositReceipItemCredit", fields: [creditAccountId], references: [id])
  creditAccountId String?         @map("credit_account_id")

  debitAccount   ChartOfAccount? @relation("DepositReceipItemDebit", fields: [debitAccountId], references: [id])
  debitAccountId String?         @map("debit_account_id")

  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")
  deletedAt DateTime? @map("deleted_at")
}

// Tiền gửi - chi
model DepositPayment {
  id                 String    @id @default(uuid())
  depositPaymentType String?   @map("deposit_receip_type")
  paymentMethod      String?   @map("payment_method")
  paymentBankName    String?   @map("payment_bank_name") // Tên ngân hàng chi
  address            String?
  receipBankName     String?   @map("receip_bank_name") // Tên ngân hàng thu
  description        String?
  idCardNo           String?   @map("id_card_no")
  issuedBy           String?   @map("issued_by")
  issuedDate         DateTime? @map("issued_date")
  voucherNumber      String?   @map("voucher_number")
  voucherDate        DateTime? @map("voucher_date")

  // Quan hệ với bảng công ty
  company   Customer @relation(fields: [companyId], references: [id])
  companyId String   @map("company_id")

  Employee Employee? @relation("DepositPaymentEmployee", fields: [employee], references: [id])
  employee String?

  // EmployeeByType Employee? @relation("DepositPaymentEmployeeByType", fields: [employeeByType], references: [id])
  // employeeByType String?   @map("employee_by_type")

  Bank BankAccount? @relation("DepositPaymentBank", fields: [bank], references: [id])
  bank String?

  Supplier Partner? @relation("DepositPaymentSupplier", fields: [supplier], references: [id])
  supplier String?

  Subject Partner? @relation("DepositPaymentSubject", fields: [subject], references: [id])
  subject String?

  DepositPaymentItem_DepositPayment DepositPaymentItem[] @relation("DepositPaymentItem_DepositPayment")

  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")
  deletedAt DateTime? @map("deleted_at")
}

// Chi tiết tiền gửi - chi
model DepositPaymentItem {
  id          String  @id @default(uuid())
  description String?
  ammount     Int?

  // loanAgreement

  DepositPayment DepositPayment? @relation("DepositPaymentItem_DepositPayment", fields: [depositPayment], references: [id])
  depositPayment String?

  Subject Partner? @relation("DepositPaymentItemSubject", fields: [subject], references: [id])
  subject String?

  creditAccount   ChartOfAccount? @relation("DepositPaymentItemCredit", fields: [creditAccountId], references: [id])
  creditAccountId String?         @map("credit_account_id")

  debitAccount   ChartOfAccount? @relation("DepositPaymentItemDebit", fields: [debitAccountId], references: [id])
  debitAccountId String?         @map("debit_account_id")

  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")
  deletedAt DateTime? @map("deleted_at")
}

model Invoice {
  id                        String    @id @default(uuid())
  type                      String?
  verificationStatus        String?
  code                      String?
  invoiceDate               DateTime?
  taxId                     String?
  invoiceNumber             String?
  goodAmount                BigInt?
  taxAmount                 BigInt?
  partnerName               String?
  totalPaymentAmmount       BigInt?
  invoiceValue              BigInt?
  formNumber                String?
  invoiceType               String?
  invoiceStatus             String?
  invoiceVerificationResult String?
  verificationCondition     String?
  lastVerificationTime      DateTime?
  accountingStatus          String?
  accountingDocument        String?
  invoiceSource             String?

  ExecutinPerson Employee? @relation("Invoice_ExecutinPerson", fields: [executinPerson], references: [id])
  executinPerson String?

  // Quan hệ với bảng công ty
  customer   Customer @relation(fields: [customerId], references: [id])
  customerId String   @map("customer_id")

  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")
  deletedAt DateTime? @map("deleted_at")
}

model PaymentTerms {
  id   String  @id @default(uuid())
  code String?
  name String?

  // Quan hệ với bảng công ty
  Company   Customer @relation(fields: [companyId], references: [id])
  companyId String   @map("company_id")

  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")
  deletedAt DateTime? @map("deleted_at")

  ServicePurchaseVoucher_PaymentTerm ServicePurchaseVoucher[] @relation("ServicePurchaseVoucher_PaymentTerm")

  ProvisionServiceVoucher_PaymentTAndC ProvisionServiceVoucher[] @relation("ProvisionServiceVoucher_PaymentTAndC")
  SaleVoucher_PaymentTAndC             SaleVoucher[]             @relation("SaleVoucher_PaymentTAndC")
  PurchaseVoucher_PaymentTAndC         PurchaseVoucher[]         @relation("PurchaseVoucher_PaymentTAndC")
}

model VoucherAccountEntry {
  id             String  @id @default(uuid())
  serviceVoucher String?
  type           String?
  itemName       String?

  ItemId GoodsAndServices? @relation("VoucherAccountEntry_GoodsAndServices", fields: [itemId], references: [id])
  itemId String?

  // Account Entry
  customerName String?
  unitPrice    Float?
  quantity     Int?

  creditAccount   ChartOfAccount? @relation("VoucherAccountEntryCredit", fields: [creditAccountId], references: [id])
  creditAccountId String?         @map("credit_account_id")

  debitAccount   ChartOfAccount? @relation("VoucherAccountEntryDebit", fields: [debitAccountId], references: [id])
  debitAccountId String?         @map("debit_account_id")

  Subject Partner? @relation("VoucherAccountEntrySubject", fields: [subject], references: [id])
  subject String?

  Unit   Unit?   @relation("VoucherAccountEntryUnit", fields: [unitId], references: [id])
  unitId String?

  // Tax
  supplierName         String?
  supplierAddress      String?
  supplierTaxCode      String?
  groupOfPurchasedGood String?
  invoiceDate          DateTime?
  invoiceNumber        String?
  vatDescription       String?

  VatAccount ChartOfAccount? @relation("VoucherAccountEntryVatAccount", fields: [vatAccount], references: [id])
  vatAccount String?

  Supplier Partner? @relation("VoucherAccountEntrySupplier", fields: [supplier], references: [id])
  supplier String?

  // Quan hệ với bảng công ty
  customer   Customer @relation(fields: [customerId], references: [id])
  customerId String   @map("customer_id")

  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")
  deletedAt DateTime? @map("deleted_at")
}

model ServicePurchaseVoucher {
  id                      String    @id @default(uuid())
  idCardNo                String?
  paymentMethod           String?
  paymentStatus           String?
  paymentAccountBankName  String?
  paymentDetail           String?
  invoiceInclusion        String?
  description             String?
  receipient              String?
  particular              String?
  quantityOriginalVoucher String?
  recipient               String?
  recipientAccountName    String?
  supplierName            String?
  supplierAddress         String?
  issuedDate              DateTime?
  issuedBy                String?
  payWithInDays           String?
  dueDate                 DateTime?
  cashPaymentVoucherNo    String?
  cashPaymentVoucherDate  DateTime?
  postedDate              DateTime?
  voucherNumber           String?
  voucherDate             DateTime?

  purchase_without_invoiceInfo_supplier_name String?
  purchase_without_invoiceInfo_id_card_no    String?
  purchase_without_invoiceInfo_address       String?

  // Quan hệ với bảng công ty
  company   Customer @relation(fields: [companyId], references: [id])
  companyId String   @map("customer_id")

  RecipientAccount Bank?   @relation("ServicePurchaseVoucher_RecipientAccount", fields: [recipientAccount], references: [id])
  recipientAccount String?

  Supplier Partner? @relation("ServicePurchaseVoucher_Supplier", fields: [supplier], references: [id])
  supplier String?

  PurchasingStaff Employee? @relation("ServicePurchaseVoucher_PurchasingStaff", fields: [purchasingStaff], references: [id])
  purchasingStaff String?

  PaymentAccount Bank?   @relation("ServicePurchaseVoucher_PaymentAccount", fields: [paymentAccount], references: [id])
  paymentAccount String?

  PaymentTerm PaymentTerms? @relation("ServicePurchaseVoucher_PaymentTerm", fields: [paymentTerm], references: [id])
  paymentTerm String?

  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")
  deletedAt DateTime? @map("deleted_at")

  ServicePurchaseVoucherItem_ServicePurchaseVoucher ServicePurchaseVoucherItem[] @relation("ServicePurchaseVoucherItem_ServicePurchaseVoucher")
}

model ServicePurchaseVoucherItem {
  id                   String  @id @default(uuid())
  itemName             String?
  subjectName          String?
  quantity             Int?
  unitPrice            Float?
  invoiceNumber        String?
  invoiceDate          String?
  vatDescription       String?
  groupOfPurchasedGood String?
  supplierTaxCode      String?
  supplierName         String?
  supplierAddress      String?

  Vat VatTax? @relation("ServicePurchaseVoucherItem_Vat", fields: [vat], references: [id])
  vat String?

  Subject Partner? @relation("ServicePurchaseVoucherItem_Subjet", fields: [subject], references: [id])
  subject String?

  VatAccount ChartOfAccount? @relation("ServicePurchaseVoucherItem_VatAccount", fields: [vatAccount], references: [id])
  vatAccount String?

  Supplier Partner? @relation("ServicePurchaseVoucherItem_Supplier", fields: [supplier], references: [id])
  supplier String?

  creditAccount   ChartOfAccount? @relation("ServicePurchaseVoucherItemCredit", fields: [creditAccountId], references: [id])
  creditAccountId String?         @map("credit_account_id")

  debitAccount   ChartOfAccount? @relation("ServicePurchaseVoucherItemDebit", fields: [debitAccountId], references: [id])
  debitAccountId String?         @map("debit_account_id")

  ItemId GoodsAndServices? @relation("ServicePurchaseVoucherItem_ItemId", fields: [itemId], references: [id])
  itemId String?

  ServicePurchaseVoucher ServicePurchaseVoucher? @relation("ServicePurchaseVoucherItem_ServicePurchaseVoucher", fields: [servicePurchaseVoucher], references: [id])
  servicePurchaseVoucher String?

  Unit   Unit?   @relation("ServicePurchaseVoucherItem_Unit", fields: [unitId], references: [id])
  unitId String? @map("unit_id")

  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")
  deletedAt DateTime? @map("deleted_at")
}

model ProvisionServiceVoucher {
  id                   String  @id @default(uuid())
  voucherNumber        String?
  paymentStatus        String?
  paymentMethod        String?
  withInvoice          String?
  isSubstituteInvoice  String?
  other_t_and_c        String?
  e_invoice_search_id  String?
  e_invoice_search_url String?

  // Quan hệ với bảng công ty
  Company   Customer @relation(fields: [companyId], references: [id])
  companyId String   @map("company_id")

  postDate    DateTime?
  voucherDate DateTime?

  PaymentTAndC PaymentTerms? @relation("ProvisionServiceVoucher_PaymentTAndC", fields: [paymentTAndC], references: [id])
  paymentTAndC String?

  payWithinDay Int?
  dueDate      DateTime?

  // cash receipt
  // cash_receipt_customer_id
  CashReceiptCustomer      Partner? @relation("ProvisionServiceVoucher_CashReceiptCustomer", fields: [cash_receipt_customer_id], references: [id])
  cash_receipt_customer_id String?

  cash_receipt_customer_name String?
  cash_receipt_address       String?

  // cash_receipt_back_account 
  CashReceiptBankAccount    Bank?   @relation("ProvisionServiceVoucher_CashReceiptBankAccount", fields: [cash_receipt_back_account], references: [id])
  cash_receipt_back_account String?

  cash_receipt_back_name String?

  // cash_receipt_storeperson
  CashReceiptStoreperson Employee? @relation("ProvisionServiceVoucher_CashReceiptStoreperson", fields: [cashReceiptStoreperson], references: [id])
  cashReceiptStoreperson String?

  cash_receipt_particular String?

  // debt voucher
  // debt_voucher_customer_id 
  DebtVoucherCustomer Partner? @relation("ProvisionServiceVoucher_DebtVoucherCustomer", fields: [debtVoucherCustomer], references: [id])
  debtVoucherCustomer String?

  debt_voucher_customer_name String?

  debt_voucher_contact String?

  debt_voucher_tax_code String?

  debt_voucher_address String?

  // debt_voucher_storeperson
  DebtVoucherStoreperson Employee? @relation("ProvisionServiceVoucher_DebtVoucherStoreperson", fields: [debtVoucherStoreperson], references: [id])
  debtVoucherStoreperson String?

  debt_voucher_description String?

  // invoice
  // invoice_customer_id
  InvoiceCustomer Partner? @relation("ProvisionServiceVoucher_InvoiceCustomer", fields: [invoiceCustomer], references: [id])
  invoiceCustomer String?

  invoice_customer_name  String?
  invoice_tax_code       String?
  invoice_purchaser      String?
  invoice_payment_method String?
  invoice_bank_account   String?
  invoice_address        String?
  invoice_sign           String?
  invoice_form           String?
  invoice_date           DateTime?
  invoice_number         String?

  // cash receipt voucher
  // cash_receipt_voucher_customer_id
  CashReceiptVoucherCustomer                 Partner?  @relation("ProvisionServiceVoucher_CashReceiptVoucherCustomer", fields: [cash_receipt_voucher_customer_id], references: [id])
  cash_receipt_voucher_customer_id           String?
  cash_receipt_voucher_customer_name         String?
  cash_receipt_voucher_address               String?
  cash_receipt_voucher_payer                 String?
  // cash_receipt_voucher_storeperson
  CashReceiptVoucherStoreperson              Employee? @relation("ProvisionServiceVoucher_CashReceiptVoucherStoreperson", fields: [cash_receipt_voucher_storeperson], references: [id])
  cash_receipt_voucher_storeperson           String?
  cash_receipt_voucher_particular            String?
  cash_receipt_voucher_with_original_voucher Int?

  percent_discount_invoice_value Float?
  discount_type                  String?

  // customer
  Customer Partner? @relation("ProvisionServiceVoucher_Customer", fields: [company], references: [id])
  company  String?

  customer_name     String?
  customer_tax_code String?
  customer_address  String?

  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")
  deletedAt DateTime? @map("deleted_at")

  ProvisionServiceVoucherItem_ProvisionServiceVoucher ProvisionServiceVoucherItem[] @relation("ProvisionServiceVoucherItem_ProvisionServiceVoucher")
}

model ProvisionServiceVoucherItem {
  id                      String                   @id @default(uuid())
  ProvisionServiceVoucher ProvisionServiceVoucher? @relation("ProvisionServiceVoucherItem_ProvisionServiceVoucher", fields: [provisionServiceVoucher], references: [id])
  provisionServiceVoucher String?

  Item    GoodsAndServices? @relation("ProvisionServiceVoucherItem_Item", fields: [item_id], references: [id])
  item_id String?

  itemName String?

  Unit Unit?   @relation("ProvisionServiceVoucherItem_Unit", fields: [unit], references: [id])
  unit String?

  quantity  Int?
  unitPrice Float?

  Vat VatTax? @relation("ProvisionServiceVoucherItem_Vat", fields: [vat], references: [id])
  vat String?

  discountRate Float?

  creditAccount   ChartOfAccount? @relation("ProvisionServiceVoucherItemCredit", fields: [creditAccountId], references: [id])
  creditAccountId String?         @map("credit_account_id")

  debitAccount   ChartOfAccount? @relation("ProvisionServiceVoucherItemDebit", fields: [debitAccountId], references: [id])
  debitAccountId String?         @map("debit_account_id")

  discountAccount   ChartOfAccount? @relation("ProvisionServiceVoucherItemDiscount", fields: [discountAccountId], references: [id])
  discountAccountId String?         @map("discount_account_id")

  vatAccount   ChartOfAccount? @relation("ProvisionServiceVoucherItemVat", fields: [vatAccountId], references: [id])
  vatAccountId String?         @map("vat_account_id")

  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")
  deletedAt DateTime? @map("deleted_at")
}

model SaleVoucher {
  id                             String  @id @default(uuid())
  payment_status                 String?
  payment_method                 String?
  inventory_out_voucher_included String?
  with_invoice                   String?
  is_substitute_invoice          String?
  pick_up_location               String?
  other_t_and_c                  String?
  e_invoice_search_id            String?
  e_invoice_search_url           String?

  // Quan hệ với bảng công ty
  Company   Customer @relation(fields: [companyId], references: [id])
  companyId String   @map("company_id")

  posted_date  DateTime?
  voucher_date DateTime?

  // payment_t_and_c
  PaymentTAndC    PaymentTerms? @relation("SaleVoucher_PaymentTAndC", fields: [payment_t_and_c], references: [id])
  payment_t_and_c String?

  pay_within_days                Int?
  due_date                       DateTime?
  contract_number                String?
  contract_date                  DateTime?
  b_l_no                         String?
  container_no                   String?
  export_pick_up_location        String?
  shipping_provider              String?
  discount_type                  String?
  percent_discount_invoice_value String?

  // Invoice
  // invoice_customer_id
  InvoiceCustomer     Partner? @relation("SaleVoucher_InvoiceCustomer", fields: [invoice_customer_id], references: [id])
  invoice_customer_id String?

  invoice_customer_name String?
  invoice_tax_code      String?

  invoice_address   String?
  invoice_purchaser String?

  invoice_payment_method String?

  // invoice_bank_account 
  InvoiceBankAccount   BankAccount? @relation("SaleVoucher_InvoiceBankAccount", fields: [invoice_bank_account], references: [id])
  invoice_bank_account String?

  invoice_form   String?
  invoice_sign   String?
  invoice_number String?
  invoice_date   DateTime?

  // inventory out voucher
  // inventory_out_voucher_customer_id
  InventoryOutVoucherCustomer       Partner? @relation("SaleVoucher_InventoryOutVoucherCustomer", fields: [inventory_out_voucher_customer_id], references: [id])
  inventory_out_voucher_customer_id String?

  inventory_out_voucher_customer_name String?
  inventory_out_voucher_receipient    String?
  inventory_out_voucher_address       String?

  // inventory_out_voucher_storeperson
  InventoryOutVoucherStorePerson    Employee? @relation("SaleVoucher_InventoryOutVoucherStorePerson", fields: [inventory_out_voucher_storeperson], references: [id])
  inventory_out_voucher_storeperson String?

  inventory_out_voucher_particular            String?
  inventory_out_voucher_with_original_voucher String?

  // Debt voucher
  // debt_voucher_customer_id
  DebtVoucherCustomer      Partner? @relation("SaleVoucher_DebtVoucherCustomer", fields: [debt_voucher_customer_id], references: [id])
  debt_voucher_customer_id String?

  debt_voucher_customer_name String?
  debt_voucher_tax_code      String?
  debt_voucher_address       String?
  debt_voucher_contact       String?

  // debt_voucher_storeperson
  DebtVoucherStoreperson   Employee? @relation("SaleVoucher_DebtVoucherStoreperson", fields: [debt_voucher_storeperson], references: [id])
  debt_voucher_storeperson String?

  debt_voucher_description String?

  // debt_voucher_principal
  DebtVoucherPrincipal   Partner? @relation("SaleVoucher_DebtVoucherPrincipal", fields: [debt_voucher_principal], references: [id])
  debt_voucher_principal String?

  // debt_voucher_trustor
  DebtVoucherTrustor   Partner? @relation("SaleVoucher_DebtVoucherTrustor", fields: [debt_voucher_trustor], references: [id])
  debt_voucher_trustor String?

  // cash receipt
  // cash_receipt_customer_id
  CashReceiptCustomer      Partner? @relation("SaleVoucher_CashReceiptCustomer", fields: [cash_receipt_customer_id], references: [id])
  cash_receipt_customer_id String?

  cash_receipt_customer_name    String?
  cash_receipt_customer_address String?

  // cash_receipt_cash_in_bank_receipt
  CashReceiptCashInBankReceipt      Bank?   @relation("SaleVoucher_CashReceiptCashInBankReceipt", fields: [cash_receipt_cash_in_bank_receipt], references: [id])
  cash_receipt_cash_in_bank_receipt String?

  cash_receipt_bank_name String?

  // cash_receipt_storeperson
  CashReceiptStoreperson   Employee? @relation("SaleVoucher_CashReceiptStoreperson", fields: [cash_receipt_storeperson], references: [id])
  cash_receipt_storeperson String?

  cash_receipt_particular String?

  // cash_receipt_principal
  CashReceiptPrincipal   Partner? @relation("SaleVoucher_CashReceiptPrincipal", fields: [cash_receipt_principal], references: [id])
  cash_receipt_principal String?

  // cash receipt voucher 
  // cash_receipt_voucher_customer_id
  CashReceiptVoucherCustomer       Partner? @relation("SaleVoucher_CashReceiptVoucherCustomer", fields: [cash_receipt_voucher_customer_id], references: [id])
  cash_receipt_voucher_customer_id String?

  cash_receipt_voucher_customer_name String?
  cash_receipt_voucher_payer         String?

  // cash_receipt_voucher_storeperson
  CashReceiptVoucherStoreperson    Employee? @relation("SaleVoucher_CashReceiptVoucherStoreperson", fields: [cash_receipt_voucher_storeperson], references: [id])
  cash_receipt_voucher_storeperson String?

  cash_receipt_voucher_address               String?
  cash_receipt_voucher_with_original_voucher String?
  cash_receipt_voucher_particular            String?

  // cash_receipt_voucher_principal
  CashReceiptVoucherPrincipal    Partner? @relation("SaleVoucher_CashReceiptVoucherPrincipal", fields: [cash_receipt_voucher_principal], references: [id])
  cash_receipt_voucher_principal String?

  // customer
  Customer Partner? @relation("SaleVoucher_Customer", fields: [company], references: [id])
  company  String?

  customer_name     String?
  sales_voucher     String?
  customer_tax_code String?
  customer_address  String?
  voucher_number    String?

  SaleVoucherItem_SaleVoucher SaleVoucherItem[] @relation("SaleVoucherItem_SaleVoucher")

  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")
  deletedAt DateTime? @map("deleted_at")
}

model SaleVoucherItem {
  id String @id @default(uuid())

  // sales_voucher
  SaleVoucher   SaleVoucher? @relation("SaleVoucherItem_SaleVoucher", fields: [sales_voucher], references: [id])
  sales_voucher String?

  // item_id
  Item    GoodsAndServices? @relation("SaleVoucherItem_Item", fields: [item_id], references: [id])
  item_id String?

  item_name String?

  // unit
  Unit Unit?   @relation("SaleVoucherItem_Unit", fields: [unit], references: [id])
  unit String?

  quantity           Int?
  unit_price         Float?
  unit_cost_of_sales Float?
  cost_of_goods_sold Float?

  // vat 
  Vat VatTax? @relation("SaleVoucherItem_Vat", fields: [vat], references: [id])
  vat String?

  export_taxed_value Float?
  percent_export_tax Float?
  discount_rate      Float?

  // Cost of sale
  // warehouse
  Warehouse Warehouse? @relation("SaleVoucherItem_Warehouse", fields: [warehouse], references: [id])
  warehouse String?

  // expense_account
  ExpenseAccount  ChartOfAccount? @relation("SaleVoucherItem_ExpenseAccount", fields: [expense_account], references: [id])
  expense_account String?

  // inventory_account
  InventoryAccount  ChartOfAccount? @relation("SaleVoucherItem_InventoryAccount", fields: [inventory_account], references: [id])
  inventory_account String?

  creditAccount   ChartOfAccount? @relation("SaleVoucherItemCredit", fields: [creditAccountId], references: [id])
  creditAccountId String?         @map("credit_account_id")

  debitAccount   ChartOfAccount? @relation("SaleVoucherItemDebit", fields: [debitAccountId], references: [id])
  debitAccountId String?         @map("debit_account_id")

  cashAccount   ChartOfAccount? @relation("SaleVoucherItemCash", fields: [cashAccountId], references: [id])
  cashAccountId String?         @map("cash_account_id")

  // liability_account
  liabilityAccount   ChartOfAccount? @relation("SaleVoucherItemLiability", fields: [liabilityAccountId], references: [id])
  liabilityAccountId String?         @map("liability_account_id")

  // liability_account_or_expense_account
  SaleVoucherItem_LiabilityAccountOrExpense ChartOfAccount? @relation("SaleVoucherItem_LiabilityAccountOrExpense", fields: [liability_account_or_expense_account_id], references: [id])
  liability_account_or_expense_account_id   String?

  // sales_account
  SaleAccount      ChartOfAccount? @relation("SaleVoucherItem_SaleAccount", fields: [sales_account_id], references: [id])
  sales_account_id String?

  // export_tax_account
  ExportTaxAccount      ChartOfAccount? @relation("SaleVoucherItem_ExportTaxAccount", fields: [export_tax_account_id], references: [id])
  export_tax_account_id String?

  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")
  deletedAt DateTime? @map("deleted_at")
}

model PurchaseVoucher {
  id             String    @id @default(uuid())
  purchase_type  String?
  voucher_number String?
  payment_status String?
  payment_method String?
  posted_date    DateTime?
  voucher_date   DateTime?

  // Quan hệ với bảng công ty
  Company   Customer @relation(fields: [companyId], references: [id])
  companyId String   @map("company_id")

  // payment_t_and_c
  PaymentTAndC    PaymentTerms? @relation("PurchaseVoucher_PaymentTAndC", fields: [payment_t_and_c], references: [id])
  payment_t_and_c String?

  pay_within_days Int?
  due_date        DateTime?

  // supplier
  Supplier Partner? @relation("PurchaseVoucher_Supplier", fields: [supplier], references: [id])
  supplier String?

  supplier_name     String?
  supplier_address  String?
  supplier_tax_code String?

  courier String?

  // purchasing_staff
  PurchasingStaff  Employee? @relation("PurchaseVoucher_PurchasingStaff", fields: [purchasing_staff], references: [id])
  purchasing_staff String?

  receipient               String?
  quantity_original_number String?
  inventory_in_voucher_no  String?

  // recipient_account
  RecipientAccount  BankAccount? @relation("PurchaseVoucher_RecipientAccount", fields: [recipient_account], references: [id])
  recipient_account String?

  recipient_account_bank_name String?

  description String?

  // payment_account
  PaymentAccount  BankAccount? @relation("PurchaseVoucher_PaymentAccount", fields: [payment_account], references: [id])
  payment_account String?

  payment_account_bank_name String?
  e_invoice_search_id       String?
  e_invoice_search_url      String?

  inventory_in_voucher_particular String?
  cash_payment_voucher_particular String?
  debt_voucher_particular         String?

  // invoice
  invoice_form   String?
  invoice_sign   String?
  invoice_number String?
  invoice_date   DateTime?
  discount       String?
  discount_rate  String?

  // counter cheque
  personal_id_number                  String?
  issued_date                         String?
  issued_by                           String?
  invoice_inclusion                   String?
  PurchaseVoucherItem_PurchaseVoucher PurchaseVoucherItem[] @relation("PurchaseVoucherItem_PurchaseVoucher")

  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")
  deletedAt DateTime? @map("deleted_at")
}

model PurchaseVoucherItem {
  id String @id @default(uuid())

  // purchase_voucher
  PurchaseVoucher  PurchaseVoucher? @relation("PurchaseVoucherItem_PurchaseVoucher", fields: [purchase_voucher], references: [id])
  purchase_voucher String?

  // item_id
  Item    GoodsAndServices? @relation("PurchaseVoucherItem_Item", fields: [item_id], references: [id])
  item_id String?

  item_name String?

  // cost_account
  CostAccount  ChartOfAccount? @relation("PurchaseVoucherItem_CostAccount", fields: [cost_account], references: [id])
  cost_account String?

  // account_payable
  AccountPayable  ChartOfAccount? @relation("PurchaseVoucherItem_AccountPayable", fields: [account_payable], references: [id])
  account_payable String?

  // cash_account
  CashAccount  ChartOfAccount? @relation("PurchaseVoucherItem_CashAccount", fields: [cash_account], references: [id])
  cash_account String?

  // inventory_account
  InventoryAccount  ChartOfAccount? @relation("PurchaseVoucherItem_InventoryAccount", fields: [inventory_account], references: [id])
  inventory_account String?

  Unit Unit?   @relation("PurchaseVoucherItem_Unit", fields: [unit], references: [id])
  unit String?

  quantity   Int?
  unit_price Float?

  Vat VatTax? @relation("PurchaseVoucherItem_Vat", fields: [vat], references: [id])
  vat String?

  VatAccount  ChartOfAccount? @relation("PurchaseVoucherItem_VatAccount", fields: [vat_account], references: [id])
  vat_account String?

  purchase_cost   Float?
  pre_custom_cost Float?

  // group_of_purchased_goods 
  GroupOfPurchaseGood      GroupOfPurchasedGood? @relation("PurchaseVoucherItem_GroupOfPurchaseGood", fields: [group_of_purchased_goods], references: [id])
  group_of_purchased_goods String?

  discount_rate String?

  Warehouse Warehouse? @relation("PurchaseVoucherItem_Warehouse", fields: [warehouse], references: [id])
  warehouse String?

  // Tax
  automatically_calculate                 String?
  pre_customs_cost_in_accounting_currency String?
  pre_customs_cost_in_foreign_currency    String?
  custom_exchange_rate                    String?
  import_tax_rate                         String?

  // import_tax_account 
  ImportTaxAccount   ChartOfAccount? @relation("PurchaseVoucherItem_ImportTaxAccount", fields: [import_tax_account], references: [id])
  import_tax_account String?

  special_consumption_tax_rate String?

  // special_consumption_tax_account
  SpecialConsumptionTaxAccount    ChartOfAccount? @relation("PurchaseVoucherItem_SpecialConsumptionTaxAccount", fields: [special_consumption_tax_account], references: [id])
  special_consumption_tax_account String?

  vat_description String?

  // vat_corresponding_account
  VatCorrespondingAccount   ChartOfAccount? @relation("PurchaseVoucherItem_VatCorrespondingAccount", fields: [vat_corresponding_account], references: [id])
  vat_corresponding_account String?

  fob Float?

  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")
  deletedAt DateTime? @map("deleted_at")
}

model GroupOfPurchasedGood {
  id          String  @id @default(uuid())
  code        String?
  name        String?
  description String?

  // Quan hệ với bảng công ty
  Company   Customer @relation(fields: [companyId], references: [id])
  companyId String   @map("company_id")

  createdAt           DateTime              @default(now()) @map("created_at")
  updatedAt           DateTime?             @updatedAt @map("updated_at")
  deletedAt           DateTime?             @map("deleted_at")
  PurchaseVoucherItem PurchaseVoucherItem[] @relation("PurchaseVoucherItem_GroupOfPurchaseGood")
}

// Ghi giảm
model AssetWriteOff {
  id            String    @id @default(uuid())
  reason        String? // Lý do ghi giảm
  postedDate    DateTime? // Ngày hạch toán
  voucherDate   DateTime? // Ngày chứng từ
  voucherNumber String? // Số chứng từ

  // Quan hệ
  assets      AssetWriteOffAsset[]
  accountings AssetWriteOffAccounting[]

  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")
  deletedAt DateTime? @map("deleted_at")
}

// Ghi giảm - Tài sản
model AssetWriteOffAsset {
  id                      String  @id @default(uuid())
  assetCode               String? // Mã tài sản
  assetName               String? // Tên tài sản
  originalCost            Float? // Nguyên giá
  accumulatedDepreciation Float? // Hao mòn lũy kế
  depreciationValue       Float? // Giá trị khấu hao (có thể là hao mòn kỳ này)
  remainingValue          Float? // Giá trị còn lại

  AssetWriteOff   AssetWriteOff? @relation(fields: [assetWriteOffId], references: [id])
  assetWriteOffId String?

  Department   Department? @relation("AssetWriteOffAsset_Department", fields: [departmentId], references: [id])
  departmentId String? // Đơn vị sử dụng (FK tới Department)

  AccountOriginalCost   ChartOfAccount? @relation("AssetWriteOffAsset_OriginalCostAccount", fields: [accountOriginalCostId], references: [id])
  accountOriginalCostId String? // Tài khoản nguyên giá (FK ChartOfAccount)

  AccountDepreciation   ChartOfAccount? @relation("AssetWriteOffAsset_DepreciationAccount", fields: [accountDepreciationId], references: [id])
  accountDepreciationId String? // Tài khoản hao mòn (FK ChartOfAccount)

  AccountRemainingValue   ChartOfAccount? @relation("AssetWriteOffAsset_RemainingValueAccount", fields: [accountRemainingValueId], references: [id])
  accountRemainingValueId String? // Tài khoản xử lý giá trị còn lại (FK ChartOfAccount)

  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")
  deletedAt DateTime? @map("deleted_at")
}

// Ghi giảm - Hoạch toán
model AssetWriteOffAccounting {
  id          String  @id @default(uuid())
  description String? // Diễn giải
  amount      Float? // Số tiền
  costItem    String? // Khoản mục chi phí 

  AssetWriteOff   AssetWriteOff? @relation(fields: [assetWriteOffId], references: [id])
  assetWriteOffId String?

  DebitAccount   ChartOfAccount? @relation("AssetWriteOffAccounting_DebitAccount", fields: [debitAccountId], references: [id])
  debitAccountId String? // Tài khoản nợ (FK ChartOfAccount)

  CreditAccount   ChartOfAccount? @relation("AssetWriteOffAccounting_CreditAccount", fields: [creditAccountId], references: [id])
  creditAccountId String? // Tài khoản có (FK ChartOfAccount)

  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")
  deletedAt DateTime? @map("deleted_at")
}

// Ghi tăng
model AssetIncrement {
  id            String   @id @default(uuid())
  voucherNumber String // Số chứng từ ghi tăng
  incrementDate DateTime // Ngày ghi tăng
  assetType     String // Loại tài sản
  assetCode     String // Mã tài sản
  assetName     String // Tên tài sản
  isDepreciable Boolean // Có tính khấu hao không

  Department   Department @relation("AssetIncrement_Department", fields: [departmentId], references: [id])
  departmentId String // Đơn vị sử dụng (FK tới Department)

  // Quan hệ đến các bảng con
  AssetDepreciationInfo_AssetIncrement AssetDepreciationInfo[] @relation("AssetDepreciationInfo_AssetIncrement")
  AssetAllocation_AssetIncrement       AssetAllocation[]       @relation("AssetAllocation_AssetIncrement")
  AssetComponent_AssetIncrement        AssetComponent[]        @relation("AssetComponent_AssetIncrement")
  AssetAccessory_AssetIncrement        AssetAccessory[]        @relation("AssetAccessory_AssetIncrement")
  AssetFormationOrigin_AssetIncrement  AssetFormationOrigin[]  @relation("AssetFormationOrigin_AssetIncrement")

  // attachments        FileAttachment[] @relation("AssetIncrementAttachment")

  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")
  deletedAt DateTime? @map("deleted_at")
}

// Ghi tăng - Thông tin khấu hao
model AssetDepreciationInfo {
  id                      String    @id @default(uuid())
  originalCost            Float? // Nguyên giá
  depreciationRateMonth   Float? // Tỷ lệ khấu hao tháng
  depreciationValue       Float? // Giá trị khấu hao
  depreciationMonth       Float? // Giá trị khấu hao tháng
  startDepreciationDate   DateTime? // Ngày bắt đầu khấu hao
  accumulatedDepreciation Float? // Hao mòn lũy kế
  usefulLife              Float? // Thời gian sử dụng (số lượng)
  usefulLifeUnit          String? // giờ, phút, ngày, tháng, năm
  isTaxLimited            Boolean? // Có giới hạn tính KH theo lụât Thuế TNDN không

  AssetIncrement   AssetIncrement? @relation("AssetDepreciationInfo_AssetIncrement", fields: [assetIncrementId], references: [id])
  assetIncrementId String?

  OriginalCostAccount   ChartOfAccount? @relation("AssetDepreciationInfo_OriginalCostAccount", fields: [originalCostAccountId], references: [id])
  originalCostAccountId String? // Tài khoản nguyên giá

  DepreciationAccount   ChartOfAccount? @relation("AssetDepreciationInfo_DepreciationAccount", fields: [depreciationAccountId], references: [id])
  depreciationAccountId String? // Tài khoản khấu hao

  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")
  deletedAt DateTime? @map("deleted_at")
}

// Ghi tăng - Thiết lập phân bố
model AssetAllocation {
  id            String  @id @default(uuid())
  ratioPercent  Float? // Tỷ lệ phân bổ %
  costItem      String? // Khoản mục chi phí
  statisticCode String? // Mã thống kê

  AssetIncrement   AssetIncrement? @relation("AssetAllocation_AssetIncrement", fields: [assetIncrementId], references: [id])
  assetIncrementId String?

  ExpenseAccount   ChartOfAccount? @relation("AssetAllocation_ExpenseAccount", fields: [expenseAccountId], references: [id])
  expenseAccountId String? // Tài khoản chi phí

  object   Object? @relation("AssetAllocation_object", fields: [objectId], references: [id])
  objectId String? // Đối tượng (FK đến Object)

  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")
  deletedAt DateTime? @map("deleted_at")
}

// Ghi tăng - Nguồn gốc hình thành
model AssetFormationOrigin {
  id            String   @id @default(uuid())
  voucherDate   DateTime // Ngày chứng từ
  voucherNumber String // Số chứng từ
  description   String // Diễn giải
  amount        Float // Số tiền

  // Quan hệ
  AssetIncrement   AssetIncrement? @relation("AssetFormationOrigin_AssetIncrement", fields: [assetIncrementId], references: [id])
  assetIncrementId String?

  DebitAccount   ChartOfAccount @relation("AssetFormationOrigin_DebitAccount", fields: [debitAccountId], references: [id])
  debitAccountId String // Tài khoản nợ (FK ChartOfAccount)

  CreditAccount   ChartOfAccount @relation("AssetFormationOrigin_CreditAccount", fields: [creditAccountId], references: [id])
  creditAccountId String // Tài khoản có (FK ChartOfAccount)

  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")
  deletedAt DateTime? @map("deleted_at")
}

// Ghi tăng - Bộ phận cấu thành
model AssetComponent {
  id             String  @id @default(uuid())
  name           String? // Bộ phận
  unit           String? // Đơn vị tính
  quantity       Int? // Số lượng
  warrantyPeriod Int? // Thời hạn bảo hành

  AssetIncrement   AssetIncrement? @relation("AssetComponent_AssetIncrement", fields: [assetIncrementId], references: [id])
  assetIncrementId String?

  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")
  deletedAt DateTime? @map("deleted_at")
}

// Ghi tăng - Dụng cụ phụ tùng kèm theo 
model AssetAccessory {
  id       String  @id @default(uuid())
  name     String? // Tên / Quy cách dụng cụ / Phụ tùng
  unit     String? // Đơn vị tính
  quantity Int? // Số lượng
  value    Float? // Giá trị

  AssetIncrement   AssetIncrement? @relation("AssetAccessory_AssetIncrement", fields: [assetIncrementId], references: [id])
  assetIncrementId String?

  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")
  deletedAt DateTime? @map("deleted_at")
}

// Đối tượng
model Object {
  id         String  @id @default(uuid())
  objectCode String? // Mã đối tượng
  objectName String? // Tên đối tượng
  objectType String? // Loại đối tượng

  AssetAllocation_object         AssetAllocation[]         @relation("AssetAllocation_object")
  AssetRevaluationPosting_Object AssetRevaluationPosting[] @relation("AssetRevaluationPosting_Object")

  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")
  deletedAt DateTime? @map("deleted_at")
}

// Tài sản
model Asset {
  id                      String    @id @default(uuid())
  assetCode               String? // Mã tài sản
  assetName               String? // Tên tài sản 
  incrementDate           DateTime? // Ngày ghi tăng
  depreciationDate        DateTime? // Ngày bắt đầu tính khấu hao
  useTime                 Float? // Thời gian sử dụng
  useTimeRemain           Float? // Thời gian sử dụng còn lại
  originalCost            Float? // Nguyên giá
  depreciationValue       Float? // Giá trị khấu hao
  accumulatedDepreciation Float? // Hao mòn lũy kế

  assetType   AssetType? @relation("Asset_AssetType", fields: [assetTypeId], references: [id])
  assetTypeId String?

  Department   Department? @relation("Asset_Department", fields: [departmentId], references: [id])
  departmentId String?

  AssetTransferDetail          AssetTransferDetail[]    @relation("AssetTransferDetail_Asset")
  AssetRevaluationDetail_Asset AssetRevaluationDetail[] @relation("AssetRevaluationDetail_Asset")

  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")
  deletedAt DateTime? @map("deleted_at")
}

// Loại tài sản
model AssetType {
  id          String  @id @default(uuid())
  name        String? // Tên tài sản
  description String? // Mô tả

  Asset_AssetType Asset[] @relation("Asset_AssetType")

  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")
  deletedAt DateTime? @map("deleted_at")
}

// Đơn vị hành chính
model Department {
  id          String  @id @default(uuid())
  name        String? // Tên đơn vị hành chính
  code        String? // Mã đơn vị hành chính
  description String? // Mô tả

  AssetWriteOffAsset_Department AssetWriteOffAsset[] @relation("AssetWriteOffAsset_Department")
  AssetIncrement_Department     AssetIncrement[]     @relation("AssetIncrement_Department")
  Asset_Department              Asset[]              @relation("Asset_Department")

  AssetTransferDetail_FromDepartment AssetTransferDetail[] @relation("AssetTransferDetail_FromDepartment")
  AssetTransferDetail_ToDepartment   AssetTransferDetail[] @relation("AssetTransferDetail_ToDepartment")

  createdAt                          DateTime                  @default(now()) @map("created_at")
  updatedAt                          DateTime?                 @updatedAt @map("updated_at")
  deletedAt                          DateTime?                 @map("deleted_at")
  AssetRevaluationDetail_Department  AssetRevaluationDetail[]  @relation("AssetRevaluationDetail_Department")
  AssetRevaluationPosting_Department AssetRevaluationPosting[] @relation("AssetRevaluationPosting_Department")
}

// Điều chuyển tài sản
model AssetTransfer {
  id             String   @id @default(uuid())
  transferNumber String // Biên bản giao nhận số
  transferDate   DateTime // Ngày
  reason         String // Lý do điều chuyển

  DeliveredBy   Employee @relation("AssetTransfer_DeliveredBy", fields: [deliveredById], references: [id])
  deliveredById String // Người bàn giao

  ReceivedBy   Employee @relation("AssetTransfer_ReceivedBy", fields: [receivedById], references: [id])
  receivedById String // Người tiếp nhận

  AssetTransferDetail_AssetTransfer AssetTransferDetail[] @relation("AssetTransferDetail_AssetTransfer")

  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")
  deletedAt DateTime? @map("deleted_at")
}

// Chi tiết điều chuyển tài sản
model AssetTransferDetail {
  id String @id @default(uuid())

  Asset   Asset  @relation("AssetTransferDetail_Asset", fields: [assetId], references: [id])
  assetId String // FK đến tài sản

  FromDepartment   Department @relation("AssetTransferDetail_FromDepartment", fields: [fromDepartmentId], references: [id])
  fromDepartmentId String // Từ đơn vị

  ToDepartment   Department @relation("AssetTransferDetail_ToDepartment", fields: [toDepartmentId], references: [id])
  toDepartmentId String // Đến đơn vị

  saleContract  String? // Hợp đồng bán (để tạm chưa tạo bảng hợp đồng)
  purchaseOrder String? // Đơn đặt hàng (để tạm chưa tạo bảng đơn đặt hàng)
  project       String? // Công trình (để tạm)

  costItem   String? // Khoản mục chi phí
  thcpObject String? // Đối tượng THCP

  ExpenseAccount   ChartOfAccount @relation("AssetTransferDetail_ExpenseAccount", fields: [expenseAccountId], references: [id])
  expenseAccountId String // Tài khoản chi phí

  AssetTransfer   AssetTransfer @relation("AssetTransferDetail_AssetTransfer", fields: [assetTransferId], references: [id])
  assetTransferId String

  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")
  deletedAt DateTime? @map("deleted_at")
}

// Đánh giá lại
model AssetRevaluation {
  id              String   @id @default(uuid())
  revaluationCode String // Biên bản số
  revaluationDate DateTime // Ngày
  reason          String // Lý do
  postedDate      DateTime // Ngày hạch toán
  voucherDate     DateTime // Ngày chứng từ
  voucherNumber   String // Số chứng từ

  // Quan hệ đến bảng con
  details  AssetRevaluationDetail[]  @relation("AssetRevaluationDetail_AssetRevaluation")
  postings AssetRevaluationPosting[] @relation("AssetRevaluationPosting_AssetRevaluation")

  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")
  deletedAt DateTime? @map("deleted_at")
}

// Đánh giá lại - Chi tiết điều chỉnh
model AssetRevaluationDetail {
  id String @id @default(uuid())

  remainingValueBefore     Float? // Giá trị còn lại trước điều chỉnh
  remainingValueAfter      Float? // Giá trị còn lại sau điều chỉnh
  remainingValueDifference Float? // Chênh lệch

  remainingUseTimeBefore     Float? // Thời gian sử dụng còn lại trước
  remainingUseTimeAfter      Float? // Thời gian sử dụng còn lại sau
  remainingUseTimeDifference Float? // Chênh lệch

  accumulatedDepreciationBefore     Float? // Hao mòn trước
  accumulatedDepreciationAfter      Float? // Hao mòn sau
  accumulatedDepreciationDifference Float? // Hao mòn chênh lệch

  Asset   Asset?  @relation("AssetRevaluationDetail_Asset", fields: [assetId], references: [id])
  assetId String?

  Department   Department? @relation("AssetRevaluationDetail_Department", fields: [departmentId], references: [id])
  departmentId String?

  AssetRevaluation   AssetRevaluation? @relation("AssetRevaluationDetail_AssetRevaluation", fields: [assetRevaluationId], references: [id])
  assetRevaluationId String?

  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")
  deletedAt DateTime? @map("deleted_at")
}

// Đánh giá lại - Hạch toán     
model AssetRevaluationPosting {
  id          String  @id @default(uuid())
  description String? // Diễn giải
  amount      Float? // Số tiền
  costItem    String? // Khoản mục CP
  project     String? // Công trình
  thcpObject  String? // Đối tượng THCP

  Department   Department? @relation("AssetRevaluationPosting_Department", fields: [departmentId], references: [id])
  departmentId String?

  Object   Object? @relation("AssetRevaluationPosting_Object", fields: [objectId], references: [id])
  objectId String?

  DebitAccount   ChartOfAccount? @relation("AssetRevaluationPosting_DebitAccount", fields: [debitAccountId], references: [id])
  debitAccountId String?

  CreditAccount   ChartOfAccount? @relation("AssetRevaluationPosting_CreditAccount", fields: [creditAccountId], references: [id])
  creditAccountId String?

  AssetRevaluation   AssetRevaluation? @relation("AssetRevaluationPosting_AssetRevaluation", fields: [assetRevaluationId], references: [id])
  assetRevaluationId String?

  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")
  deletedAt DateTime? @map("deleted_at")
}
